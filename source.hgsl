//blinn phong lighting model

in normal: vec3
in world_pos: vec3

push eye_pos: vec3 //public push constant (exposed to shader system)
const light_dir = 2 * |vec3{3, -4, 0} * 2 
//const light_color : vec3 = @colHex(0xFA_FA_55)
const light_color : vec3 = vec3{1,1,1}

const ambient_intensity = 0.1 //can be a vec3

const spec_pow = 30
const spec_intensity = 1

const main = entrypoint(.fragment){
	const albedo : vec3 = .{1,1,1}
	const diffuse_color = ( light_dir * 2)// " normal

	const view_dir = |(eye_pos - world_pos)
	const specular_color = (|@reflect(-light_dir, normal) " view_dir) ^ spec_pow * spec_intensity

	out color = (albedo * (.{diffuse_color + ambient_intensity} + specular_color)).xyz1
}
