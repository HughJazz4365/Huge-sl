
const light_dir = |(2 * vec3{3, -4, 0} * .{2}) 

const light_color : vec3 = .{0xff1 & 834} //@colHex(0xFA_FD_55)

const ambient = 0.1

const spec_pow = 30
const spec_intensity = 1
const frag = entrypoint(.fragment){
	push eye_pos: vec3 = .{0}
	in normal, world_pos: vec3

	const albedo : vec3 = .{1,1,1}
	const diffuse = -light_dir *** normal

	const view_dir = |(eye_pos - world_pos)
	const specular = (|@reflect(-light_dir, normal) *** view_dir) ^ spec_pow * spec_intensity

	out out_color: vec4 = .{(albedo * (diffuse + ambient + specular)), 1}
}

const vert = entrypoint(.vertex){
	push model, vp : mat4
	in in_pos, in_normal, out out_normal, world_pos: vec3 = ,, in_normal, in_pos
	//|(@transpose(@inverse(mat3{model})) * in_normal)

	@position = vp * model * vec4{in_pos, 1}
}

